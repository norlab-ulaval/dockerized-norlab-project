#!/bin/bash
# bin/dnp

DOCUMENTATION_BUFFER_DNP=$( cat <<'EOF'
# =================================================================================================
#                                  Dockerized-NorLab-Project (DNP)
#                         A tool for managing Docker-based robotic projects
#
# Usage:
#   $ dnp COMMAND [OPTIONS]
#
# Commands:
#   init        Initialize a new DNP project
#   build       Build Docker images
#   up          Start containers
#   down        Stop containers
#   run         Run a command in a container
#   config      Show configuration
#   version     Show DNP version
#   project     Super project commands
#   help        Show this help message
#
# Run 'dnp COMMAND --help' for more information on a command.
#
# =================================================================================================
EOF
)


# ....Source project shell-scripts dependencies..................................................
script_path="$(realpath "${BASH_SOURCE[0]:-'.'}")"
dnp_core="$(dirname "$(dirname "${script_path}")")/lib/core"
source "${dnp_core}/utils/import_dnp_lib.bash"

# (CRITICAL) ToDo: validate deleting this line ↓
#source "${dnp_core}/utils/execute_compose.bash" || exit 1


function dnp::entrypoint() {
  # ....Pre-condition..............................................................................
  test -d "${DNP_ROOT:?err}" || { echo "The DNP lib load error!" ; exit 1 ; }
  test -d "${DNP_LIB_PATH:?err}" || { echo "The DNP lib load error!" ; exit 1 ; }

  # ....Set env variables (pre cli)................................................................
  # Parse command
  local the_command="$1"
  shift || true

  # ....cli........................................................................................
  if [[ -z ${the_command}  ]]; then
    dnp::show_entrypoint_help
    exit 1
  fi

  case "${the_command}" in
      init)
          source "${DNP_LIB_PATH}/commands/init.bash" || exit 1
          dnp::init "$@"
          ;;
      build)
          source "${DNP_LIB_PATH}/commands/build.bash" || exit 1
          dnp::build "$@"
          ;;
      up)
          source "${DNP_LIB_PATH}/commands/up.bash" || exit 1
          dnp::up "$@"
          ;;
      down)
          source "${DNP_LIB_PATH}/commands/down.bash" || exit 1
          dnp::down "$@"
          ;;
      run)
          source "${DNP_LIB_PATH}/commands/run.bash" || exit 1
          dnp::run "$@"
          ;;
      config)
          source "${DNP_LIB_PATH}/commands/config.bash" || exit 1
          dnp::config "$@"
          ;;
      version)
          source "${DNP_LIB_PATH}/commands/version.bash" || exit 1
          dnp::version "$@"
          ;;
      project)
          sub_the_command="$1"
          shift || true

          source "${DNP_LIB_PATH}/commands/project.bash" || exit 1
          case "${sub_the_command}" in
              validate)
                  dnp::project_validate "$@"
                  ;;
              sanity)
                  dnp::project_sanity "$@"
                  ;;
              dotenv)
                  dnp::project_dotenv "$@"
                  ;;
              help|--help|-h)
                  dnp::project_help
                  exit 1
                  ;;
              *)
                  echo "Unknown super subcommand: ${sub_the_command}"
                  dnp::project_help
                  exit 1
                  ;;
          esac
          ;;
      help|--help|-h)
          dnp::show_entrypoint_help
          exit 0
          ;;
      *)
          echo "‼️Unknown command: ${the_command}"
          echo "Here is the help menu ⬇︎. Hope it provide assistance."
          dnp::show_entrypoint_help_no_splash
          exit 1
          ;;
  esac
}

function dnp::show_entrypoint_help() {
    echo -e "${MSG_DIMMED_FORMAT}"

    # Splash type: small, negative or big
    n2st::norlab_splash 'Dockerized-NorLab-Project' 'https://github.com/norlab-ulaval/dockerized-norlab-project.git' 'big'
    n2st::echo_centering_str 'A tool for managing Docker-based robotic projects' "\033[1;37m" " "

    # Strip shell comment char `#` and both lines
    echo -e "${DOCUMENTATION_BUFFER_DNP}" | sed 's/\# ====.*//' | sed 's/^\#//' | sed 's/Dockerized-NorLab-Project (DNP)//' | sed 's/A tool for managing Docker-based robotic projects//'
    echo -e "${MSG_END_FORMAT}"
}

function dnp::show_entrypoint_help_no_splash() {
    echo -e "${MSG_DIMMED_FORMAT}"
    n2st::draw_horizontal_line_across_the_terminal_window "="
    echo -e "dnp help"
    n2st::echo_centering_str "Dockerized-NorLab-Project (DNP)" "${MSG_DIMMED_FORMAT}" " "
    n2st::echo_centering_str "A tool for managing Docker-based robotic projects" "${MSG_DIMMED_FORMAT}" " "
    # Strip shell comment char `#` and both lines
    echo -e "${MSG_DIMMED_FORMAT}${DOCUMENTATION_BUFFER_DNP}" | sed 's/\# ====.*//' | sed 's/^\#//' | sed 's/Dockerized-NorLab-Project (DNP)//' | sed 's/A tool for managing Docker-based robotic projects//'
    n2st::draw_horizontal_line_across_the_terminal_window "="
    echo -e "${MSG_END_FORMAT}"
}

# ::::Main:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
dnp::entrypoint "$@" || exit 1
