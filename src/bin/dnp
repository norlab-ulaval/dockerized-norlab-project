#!/bin/bash
# bin/dnp

DOCUMENTATION_BUFFER_DNP=$( cat <<'EOF'
# =================================================================================================
#                                  Dockerized-NorLab-Project (DNP)
#                         A tool for managing Docker-based robotic projects
#
# What it does:
#   • Provide a containerized environment for development (local and remote), deployment,
#     continuous integration, runing slurm jobs and publishing source code for release.
#   • Support l4t/arm64 (jetson), darwin/arm64 (Mac OsX) and linux/x86 os and architecture
#   • Support nvidia GPU through nvidia-docker on both l4t/arm64 and linux/x86
#
# Usage:
#   $ dnp COMMAND [OPTIONS]
#
# Commands:
#   init        Initialize a new DNP project
#   build       Build Docker images
#   up          Start containers
#   down        Stop containers
#   run         Run a command in a container
#   project     Super project commands
#   config      Show configuration
#   version     Show DNP version
#   help        Show this help message
#
# Run 'dnp COMMAND --help' for more information on a command.
#
# =================================================================================================
EOF
)

# ::::Load dependencies::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
script_path="$(realpath "${BASH_SOURCE[0]:-'.'}")"
dnp_core="$(dirname "$(dirname "${script_path}")")/lib/core"
source "${dnp_core}/utils/import_dnp_lib.bash"

# ::::Pre-condition::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
dnp_error_prefix="\033[1;31m[DNP error]\033[0m"
test -n "$( declare -f dnp::import_lib_and_dependencies )" || { echo -e "${dnp_error_prefix} The DNP lib is not loaded!" ; exit 1 ; }
test -n "$( declare -f n2st::print_msg )" || { echo -e "${dnp_error_prefix} The N2ST lib is not loaded!" ; exit 1 ; }
test -d "${DNP_ROOT:?err}" || { echo -e "${dnp_error_prefix} librairy load error!" ; exit 1 ; }
test -d "${DNP_LIB_PATH:?err}" || { echo -e "${dnp_error_prefix} librairy load error!" ; exit 1 ; }

# ::::Command functions::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
function dnp::entrypoint() {

  # ....Set env variables (pre cli)................................................................
  local the_command="$1"
  shift || true

  # ....cli........................................................................................
  if [[ -z ${the_command}  ]]; then
    dnp::show_entrypoint_help
    exit 0
  fi

  case "${the_command}" in
      init)
          source "${DNP_LIB_PATH}/commands/init.bash" || exit 1
          dnp::init_command "$@"
          exit $?
          ;;
      build)
          source "${DNP_LIB_PATH}/commands/build.bash" || exit 1
          dnp::build_command "$@"
          exit $?
          ;;
      up)
          source "${DNP_LIB_PATH}/commands/up.bash" || exit 1
          dnp::up_command "$@"
          exit $?
          ;;
      down)
          source "${DNP_LIB_PATH}/commands/down.bash" || exit 1
          dnp::down_command "$@"
          exit $?
          ;;
      run)
          source "${DNP_LIB_PATH}/commands/run.bash" || exit 1
          dnp::run_command "$@"
          exit $?
          ;;
      config)
          source "${DNP_LIB_PATH}/commands/config.bash" || exit 1
          dnp::config_command "$@"
          exit $?
          ;;
      version)
          source "${DNP_LIB_PATH}/commands/version.bash" || exit 1
          dnp::version_command "$@"
          exit $?
          ;;
      project)
          sub_the_command="$1"
          shift || true

          source "${DNP_LIB_PATH}/commands/project.bash" || exit 1
          if [[ -z ${sub_the_command}  ]]; then
            dnp::command_help_menu "${DOCUMENTATION_BUFFER_PROJECT:?err}"
            exit 0
          fi

          case "${sub_the_command}" in
              validate)
                  dnp::project_validate_command "$@"
                  exit $?
                  ;;
              sanity)
                  dnp::project_sanity_command "$@"
                  exit $?
                  ;;
              dotenv)
                  dnp::project_dotenv_command "$@"
                  exit $?
                  ;;
              help|--help|-h)
                  dnp::command_help_menu "${DOCUMENTATION_BUFFER_PROJECT:?err}"
                  exit 0
                  ;;
              *)
                  dnp::unknown_subcommand_msg "project" "${sub_the_command}"
                  exit 1
                  ;;
          esac
          ;;
      help|--help|-h)
          dnp::show_entrypoint_help
          exit 0
          ;;
      *)
          dnp::unknown_command_msg "${the_command}"
          exit 1
          ;;
  esac
}

# ::::Main:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
dnp::entrypoint "$@"
