# @formatter:off

# =================================================================================================
# Notes:
#   - The `build` attribute `pull: false` tells the image builder to use the local image store
#     to execute the FROM directive instead of pulling the image from the registry.
#     Ref https://docs.docker.com/compose/compose-file/build/#pull
#   - The attibute `pull_policy: build` tells the builder to build the image even if the `image`
#     attribute is set. So it set precedense on building over pulling.
#     Ref:
#       - https://docs.docker.com/compose/compose-file/build/#using-build-and-image
#       - https://docs.docker.com/compose/compose-file/05-services/#image
#   - Build `context` and `additional_contexts` formating options:
#       - /abs/path/to/resources
#       - ../rel/path/to/resources
#       - https://<my-repo>.git#<my-branch-or-repo-tag>:<my-folder>
#       - docker-image://<my-app>:<image-tag>
#
# =================================================================================================
services:

  project-core:
    build:
      context: ${SUPER_PROJECT_ROOT:?err}
      dockerfile: ".dockerized_norlab_project/configuration/Dockerfile"
      additional_contexts:
        context-dn-container-tools: https://github.com/norlab-ulaval/dockerized-norlab.git#${DN_GIT_BRANCH:?err}:dockerized-norlab-images/container-tools
        context-dnp-lib-container-tools: ${DNP_ROOT:?err}/src/lib/core/docker/container-tools
      args:
        BASE_IMAGE: ${DN_HUB:?err}/${DN_PROJECT_BASE_IMG:?err}
        BASE_IMAGE_TAG: ${DN_IMAGE_TAG:?err}
        DN_PROJECT_GIT_DOMAIN: ${DN_PROJECT_GIT_DOMAIN:?err}
        DN_PROJECT_GIT_NAME: ${DN_PROJECT_GIT_NAME:?err}
        DN_PROJECT_ALIAS_PREFIX: ${DN_PROJECT_ALIAS_PREFIX:?err}
        DN_PROJECT_USER: ${DN_PROJECT_USER:?err}
        DN_PROJECT_UID: ${DN_PROJECT_UID:?err}
        DN_PROJECT_GID: ${DN_PROJECT_GID:?err}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
      labels:
        org.opencontainers.image.authors: "luc.coupal.1@ulaval.ca"
        norlab.buildsystem.project: "${DN_PROJECT_GIT_NAME:?err}"
        norlab.dockerized-norlab.project: "${DN_PROJECT_GIT_NAME:?err}"
        norlab.tools.norlab-shell-script-tools: "${N2ST_VERSION:?err}"
        norlab.tools.norlab-build-system: "${NBS_VERSION:?err}"
    env_file:
      - path: ${SUPER_PROJECT_ROOT:?err}/.dockerized_norlab_project/configuration/.env.dnp
        required: true
      - path: ${DNP_ROOT:?err}/src/lib/core/docker/.env.dnp-internal
        required: true
      - path: ${SUPER_PROJECT_ROOT}/.dockerized_norlab_project/configuration/.env
        required: true
      - path: ${SUPER_PROJECT_ROOT}/.dockerized_norlab_project/configuration/.env.local
        required: false
    pull_policy: build # Execute the `build` attribute over pulling the `image` attribute
    image: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-core:${PROJECT_TAG:?err}
    pid: host
    ipc: host   # see comment  https://stable-baselines3.readthedocs.io/en/master/guide/install.html#run-the-images-cpu-gpu
    init: true  # Propagate exit code (See remark in task NMO-266)


  project-develop:
    build:
      context: https://github.com/norlab-ulaval/dockerized-norlab.git#${DN_GIT_BRANCH:?err}:dockerized-norlab-images/core-images/dn-project/project-develop
      additional_contexts:
        context-dn-root: https://github.com/norlab-ulaval/dockerized-norlab.git#${DN_GIT_BRANCH:?err}
        context-dn-submodules: https://github.com/norlab-ulaval/dockerized-norlab.git#${DN_GIT_BRANCH:?err}:utilities/
        context-dn-container-tools: https://github.com/norlab-ulaval/dockerized-norlab.git#${DN_GIT_BRANCH:?err}:dockerized-norlab-images/container-tools
      pull: false # Use the local image store to execute the FROM directive
      args:
        BASE_IMAGE: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-core
        BASE_IMAGE_TAG: ${PROJECT_TAG:?err}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
    pull_policy: build # Execute the `build` attribute over pulling the `image` attribute
    image: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-develop:${PROJECT_TAG:?err}
    depends_on:
      - project-core

  project-deploy:
    build:
      context: https://github.com/norlab-ulaval/dockerized-norlab.git#${DN_GIT_BRANCH:?err}:dockerized-norlab-images/core-images/dn-project/project-deploy
      additional_contexts:
        context-dn-project-local-src-path: ${DN_PROJECT_DEPLOY_SRC_PATH:?err}
        context-dn-root: https://github.com/norlab-ulaval/dockerized-norlab.git#${DN_GIT_BRANCH:?err}
        context-dn-submodules: https://github.com/norlab-ulaval/dockerized-norlab.git#${DN_GIT_BRANCH:?err}:utilities/
        context-dn-container-tools: https://github.com/norlab-ulaval/dockerized-norlab.git#${DN_GIT_BRANCH:?err}:dockerized-norlab-images/container-tools
      pull: false # Use the local image store to execute the FROM directive
      args:
        BASE_IMAGE: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-core
        BASE_IMAGE_TAG: ${PROJECT_TAG:?err}
        DN_PROJECT_DEPLOY_REPO_BRANCH: ${DN_PROJECT_DEPLOY_REPO_BRANCH:?err}
        BUILDKIT_CONTEXT_KEEP_GIT_DIR: 1
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
        DN_DEV_TESTS: false
    pull_policy: build # Execute the `build` attribute over pulling the `image` attribute
    image: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-deploy:${PROJECT_TAG:?err}
    depends_on:
      - project-core

  project-ci-tests:
    build:
      context: ${SUPER_PROJECT_ROOT:?err}
      dockerfile: ${DNP_ROOT:?err}/src/lib/core/docker/Dockerfile.ci-tests.native
      additional_contexts:
        context-dn-container-tools: https://github.com/norlab-ulaval/dockerized-norlab.git#${DN_GIT_BRANCH:?err}:dockerized-norlab-images/container-tools
        context-dnp-lib-container-tools: ${DNP_ROOT:?err}/src/lib/core/docker/container-tools
      pull: false # Use the local image store to execute the FROM directive
      args:
        BASE_IMAGE: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-core
        BASE_IMAGE_TAG: ${PROJECT_TAG:?err}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
        DNP_PYTEST_CI_RUN: true
    pull_policy: never # (Priority) ToDo: validate >> pull_policy: never
    image: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-ci-tests:${PROJECT_TAG:?err}
    depends_on:
      - project-core

  project-ci-tests-no-gpu:
    extends:
      service: project-ci-tests
    runtime: !reset []

  project-slurm:
    build:
      context: ${SUPER_PROJECT_ROOT:?err}
      dockerfile: ${DNP_ROOT:?err}/src/lib/core/docker/Dockerfile.run-slurm
      additional_contexts:
        context-dn-container-tools: https://github.com/norlab-ulaval/dockerized-norlab.git#${DN_GIT_BRANCH:?err}:dockerized-norlab-images/container-tools
        context-dnp-lib-container-tools: ${DNP_ROOT:?err}/src/lib/core/docker/container-tools
      pull: false # Use the local image store to execute the FROM directive
      args:
        BASE_IMAGE: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-core
        BASE_IMAGE_TAG: ${PROJECT_TAG:?err}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
    pull_policy: build # Execute the `build` attribute over pulling the `image` attribute
    image: ${DN_PROJECT_HUB:?err}/${DN_PROJECT_IMAGE_NAME:?err}-slurm:${PROJECT_TAG:?err}
    depends_on:
      - project-core

  project-slurm-no-gpu:
    extends:
      service: project-slurm
    runtime: !reset []
