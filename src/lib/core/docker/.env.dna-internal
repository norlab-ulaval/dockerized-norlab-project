
# =================================================================================================
# Set Dockerized-NorLab project application (DNA) internal environment variable.
#
# Notes:
#   - This dotenv file is use both at buildtime and runtime
#   - DNA dotenv file loading precedence:
#       1. .env.dna
#       2. .env
#       3. .env.local
#       4. .env.dna-internal  (DNA repo)
#
# =================================================================================================

# Set Dockerized-NorLab IN container N2ST print msg related env var, otherwise it will be set
# to Dockerized-NorLab by 'Dockerfile.core'
# Note: Use .env.dockerized-norlab-project to set PROJECT_PROMPT_NAME for DNA cli
#PROJECT_PROMPT_NAME="${PROJECT_PROMPT_NAME}"
PROJECT_PROMPT_NAME="DN"

# ====Dockerized-NorLab project application========================================================

# ....Container user (fetched from host machine at runtime)........................................
DN_PROJECT_USER="${DN_PROJECT_USER:-$(id -un)}"
DN_PROJECT_UID="${DN_PROJECT_UID:-$(id -u)}"
DN_PROJECT_GID="${DN_PROJECT_GID:-$(id -g)}"

# ....Repository config............................................................................
DN_PROJECT_GIT_REMOTE_URL="${DN_PROJECT_GIT_REMOTE_URL:-$( git remote get-url origin )}"
DN_PROJECT_GIT_DOMAIN="${DN_PROJECT_GIT_DOMAIN:-$( basename $( dirname ${DN_PROJECT_GIT_REMOTE_URL} ) )}"
DN_PROJECT_GIT_NAME="${DN_PROJECT_GIT_NAME:-$( basename ${DN_PROJECT_GIT_REMOTE_URL} .git )}"

# ....Docker config................................................................................
DN_PROJECT_IMAGE_NAME="${DN_PROJECT_IMAGE_NAME:-$( echo ${DN_PROJECT_GIT_NAME} | tr '[:upper:]' '[:lower:]' )}"

# ....Deploy config................................................................................
DN_PROJECT_DEPLOY_SRC_PATH="${DN_PROJECT_DEPLOY_SRC_PATH:-${SUPER_PROJECT_ROOT:?err}}"
DN_PROJECT_DEPLOY_REPO_BRANCH="${DN_PROJECT_DEPLOY_REPO_BRANCH:-$( git rev-parse --abbrev-ref HEAD )}"

# ====Dockerized-NorLab============================================================================
DN_PROJECT_HUB="${DN_PROJECT_HUB:-norlabulaval}"
DN_PROJECT_BASE_IMG="${DN_PROJECT_BASE_IMG:-dockerized-norlab-dependencies-full}"
DN_HUB="${DN_HUB:-norlabulaval}"
DN_GIT_BRANCH="${DN_GIT_BRANCH:-main}"
DN_VERSION="${DN_VERSION:-latest}"

# ....Tag related..................................................................................
# Dev note on tag:
#   The logic to define env var 'DN_IMAGE_TAG' using 'TAG_PACKAGE' and 'TAG_OS_VERSION'
#   from '.dockerized_norlab/configuration/.env' was quick-hack for manualy execute
#   the 'dn_execute_compose_over_build_matrix.bash' script.
#    ToDo: implement an mechanisme to manage DN_IMAGE_TAG like in Dockerized-NorLab
#       'dockerized-norlab-scripts/build_script/dn_execute_compose.bash:252' (ref task NMO-668)

TAG_PACKAGE="${TAG_PACKAGE:-foxy-base-l4t-pytorch}"

#TAG_OS_VERSION=r35.2.1
#TAG_OS_VERSION=r35.3.1
TAG_OS_VERSION="${TAG_OS_VERSION:-r35.4.1}"
#TAG_OS_VERSION=r35.5.0 # Note: dustynv/l4t-pytorch is not available for this JP version yet
#TAG_OS_VERSION=r36.2.0

# ....Those are related to the base image tag......................................................
DEPENDENCIES_BASE_IMAGE_TAG="${TAG_PACKAGE:?err}-${TAG_OS_VERSION:?err}"
DN_IMAGE_TAG="DN-${DN_VERSION:?err}-${DEPENDENCIES_BASE_IMAGE_TAG:?err}"

# ....This is the super project image tag..........................................................

TARGET_OS_NAME=l4t
# (Priority) ToDo: implement mecanism to auto set OS name base on target host (ref task NMO-668)

PROJECT_TAG="${TARGET_OS_NAME:?err}-${TAG_OS_VERSION:?err}"

# ====Docker/Docker-compose========================================================================
# Predefined environment variables
# Ref
#   - https://docs.docker.com/reference/cli/docker/
#   - https://docs.docker.com/compose/how-tos/environment-variables/envvars/

# Note:
#   - `COMPOSE_PROJECT_NAME` set the project name for docker compose usage
#   - `docker compose` seams to resolve env var with command in .env after executing the
#     `COMPOSE_PROJECT_NAME` related logic. In other word, `COMPOSE_PROJECT_NAME` can only be
#     hardcoded or substituted in .env file.
COMPOSE_PROJECT_NAME="${DN_PROJECT_IMAGE_NAME}"

